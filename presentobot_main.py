# -*- coding: utf-8 -*-
"""presentobot_data.py

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1leNLLgQHkOG2rlrt-T6Pq5JKCKG7K_FF
"""

from pptx import Presentation
from pptx.util import Inches, Pt
from presentobot_data import presentation_data as data

def get_user_input():
    print("Available Topics:")
    for i, topic in enumerate(data.keys(), 1):
        print(f"{i}. {topic}")

    while True:
        try:
            choice = int(input("\nEnter topic number: ")) - 1
            topic_choice = list(data.keys())[choice]
            break
        except (ValueError, IndexError):
            print("Invalid input. Please enter a number from the list.")

    print(f"\nAvailable Sub-Topics for {topic_choice}:")
    for i, sub_topic in enumerate(data[topic_choice]["Sub Topics"], 1):
        print(f"{i}. {sub_topic}")

    while True:
        try:
            sub_choice = int(input("\nEnter sub-topic number: ")) - 1
            sub_topic_choice = data[topic_choice]["Sub Topics"][sub_choice]
            break
        except (ValueError, IndexError):
            print("Invalid input. Please enter a number from the list.")

    return topic_choice, sub_topic_choice

def add_title_slide(prs, topic, sub_topic):
    slide = prs.slides.add_slide(prs.slide_layouts[0])
    title = slide.shapes.title
    subtitle = slide.placeholders[1]

    title.text = sub_topic
    subtitle.text = f"A {topic} Presentation"

    # Formatting
    title.text_frame.paragraphs[0].font.size = Pt(44)
    subtitle.text_frame.paragraphs[0].font.size = Pt(28)

def add_intro_slide(prs, topic, sub_topic):
    slide = prs.slides.add_slide(prs.slide_layouts[1])
    title = slide.shapes.title
    content = slide.shapes.placeholders[1]

    title.text = "Introduction"
    content.text = data[topic]["Intro"][sub_topic]

    # Formatting
    content.text_frame.paragraphs[0].font.size = Pt(18)

def create_content_slides(prs, topic, sub_topic):
    if "Content" in data[topic] and sub_topic in data[topic]["Content"]:
        for section in data[topic]["Content"][sub_topic]:
            slide = prs.slides.add_slide(prs.slide_layouts[1])
            title = slide.shapes.title
            content = slide.shapes.placeholders[1]

            title.text = section[0]
            tf = content.text_frame
            tf.text = ""

            for item in section[1]:
                p = tf.add_paragraph()
                p.text = item
                p.level = 0
                p.space_after = Pt(12)
                p.font.size = Pt(18)

def add_closing_slide(prs):
    slide = prs.slides.add_slide(prs.slide_layouts[0])
    title = slide.shapes.title
    subtitle = slide.placeholders[1]

    title.text = "Thank You!"
    subtitle.text = "Created with PresentoBot"

    # Formatting
    title.text_frame.paragraphs[0].font.size = Pt(44)
    subtitle.text_frame.paragraphs[0].font.size = Pt(28)

def main():
    print("\n" + "="*50)
    print("PRESENTOBOT".center(50))
    print("="*50 + "\n")

    topic, sub_topic = get_user_input()
    prs = Presentation()

    add_title_slide(prs, topic, sub_topic)
    add_intro_slide(prs, topic, sub_topic)
    create_content_slides(prs, topic, sub_topic)
    add_closing_slide(prs)

    filename = f"{topic}_{sub_topic.replace(' ', '_')}.pptx"
    prs.save(filename)
    print(f"\nPresentation saved as '{filename}'")

if __name__ == "__main__":
    main()